POWERTRACE_PATH = './tools/powertrace'
EXPERIMENTS_PATH = ./tools/powertrace/experiments
FINAL_RESULTS_PATH = $(EXPERIMENTS_PATH)/finalResults
EXPERIMENT_PATH=$(FINAL_RESULTS_PATH)/$(PARAMETER)
MKDIR_P = mkdir -p
DF=energy-consumption-data-$(PARAMETER)-$(CASE)
DATA_FILE=$(EXPERIMENT_PATH)/$(DF)
ifndef MAKEFILE_POWERTRACE
MAKEFILE_POWERTRACE = 1
ifdef LOG
powertrace-parse:
	cat $(LOG) | grep -e WORK_START -e STOP_WORK -e "P " -e START_OBSERVE -e STOP_OBSERVE -a | $(POWERTRACE_PATH)/energy-consumption > $(POWERTRACE_PATH)/energy-consumption-data
else #LOG
powertrace-parse:
	@echo LOG must be defined to point to the powertrace log file to parse
endif #LOG


#ifdef PARAMETER && CASE && LOG
powertrace-save:
	cp $(LOG) $(EXPERIMENT_PATH)/logfile-$(CASE).txt
	cat $(LOG) | grep -e WORK_START -e STOP_WORK -e "P " -e START_OBSERVE -e STOP_OBSERVE -a | $(POWERTRACE_PATH)/energy-consumption > $(DATA_FILE)
	tail -1 $(DATA_FILE) >> $(FINAL_RESULTS_PATH)/energy-consumption-totals
	head -n -1 $(DATA_FILE) >ecd && mv ecd $(DATA_FILE)
#endif #PARAMETER + CASE



powertrace-plot: #TO INCLUDE REST PLOTS powertrace-plot-node powertrace-plot-sniff
	@gnuplot -e "filename='$(DATA_FILE)'; path='$(EXPERIMENT_PATH)/'; case='$(CASE)';" $(POWERTRACE_PATH)/energy-consumption-plot || echo gnuplot failed

powertrace-show:
	gv $(EXPERIMENT_PATH)/energy-consumption-$(CASE).eps
	gv $(EXPERIMENT_PATH)/energy-consumption-total-$(CASE).eps
	gv $(EXPERIMENT_PATH)/duty-cycle-$(CASE).eps

powertrace-all: powertrace-parse powertrace-plot powertrace-show

powertrace-deploy: directory powertrace-save powertrace-plot powertrace-show

directory: $(EXPERIMENT_PATH)

$(EXPERIMENT_PATH):
	$(MKDIR_P) $(EXPERIMENT_PATH)

powertrace-help:
	@echo Contiki powertrace is a tool that helps with collecting power data
	@echo from motes. The data can be collected from a testbed or from a Cooja
	@echo simulation. The powertrace data consists of lines of text that include
	@echo the capital letter P followed by a list of numbers that contain the
	@echo measured time that mote peripherals were switched on.
	@echo 
	@echo A powertrace data file can be parsed and plotted with build-in
	@echo powertrace scripts.
	@echo 
	@echo To parse a data file with powertrace data, run:
	@echo 
	@echo   make powertrace-parse LOG=logfile
	@echo 
	@echo to plot the parsed data, do:
	@echo 
	@echo   make powertrace-plot
	@echo 
	@echo this produces two files called powertrace-power.eps and
	@echo powertrace-node-power.eps. To show these files, run:
	@echo 
	@echo   make powertrace-show
	@echo 
	@echo For convenience, all three above make targets can be combined into
	@echo one:
	@echo 
	@echo   make powertrace-all LOG=logfile
	@echo 
endif # MAKEFILE_POWERTRACE
