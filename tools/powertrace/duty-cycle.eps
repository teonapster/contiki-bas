%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./tools/powertrace/duty-cycle.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Tue Jan 19 19:43:21 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 5 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 20.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./tools/powertrace/duty-cycle.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (user)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jan 19 19:43:21 2016)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
880 512 M
63 0 V
5968 0 R
-63 0 V
stroke
784 512 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.01)]
] -53.3 MRshow
1.000 UL
LTb
880 795 M
31 0 V
6000 0 R
-31 0 V
880 1170 M
31 0 V
6000 0 R
-31 0 V
880 1362 M
31 0 V
6000 0 R
-31 0 V
880 1453 M
63 0 V
5968 0 R
-63 0 V
stroke
784 1453 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.1)]
] -53.3 MRshow
1.000 UL
LTb
880 1736 M
31 0 V
6000 0 R
-31 0 V
880 2111 M
31 0 V
6000 0 R
-31 0 V
880 2303 M
31 0 V
6000 0 R
-31 0 V
880 2394 M
63 0 V
5968 0 R
-63 0 V
stroke
784 2394 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1)]
] -53.3 MRshow
1.000 UL
LTb
880 2677 M
31 0 V
6000 0 R
-31 0 V
880 3052 M
31 0 V
6000 0 R
-31 0 V
880 3244 M
31 0 V
6000 0 R
-31 0 V
880 3335 M
63 0 V
5968 0 R
-63 0 V
stroke
784 3335 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 10)]
] -53.3 MRshow
1.000 UL
LTb
880 3618 M
31 0 V
6000 0 R
-31 0 V
880 3992 M
31 0 V
6000 0 R
-31 0 V
880 4185 M
31 0 V
6000 0 R
-31 0 V
880 4276 M
63 0 V
5968 0 R
-63 0 V
stroke
784 4276 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 100)]
] -53.3 MRshow
1.000 UL
LTb
880 4559 M
31 0 V
6000 0 R
-31 0 V
880 512 M
0 63 V
0 3984 R
0 -63 V
stroke
880 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 25)]
] -53.3 MCshow
1.000 UL
LTb
1957 512 M
0 63 V
0 3984 R
0 -63 V
stroke
1957 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 30)]
] -53.3 MCshow
1.000 UL
LTb
3034 512 M
0 63 V
0 3984 R
0 -63 V
stroke
3034 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 35)]
] -53.3 MCshow
1.000 UL
LTb
4111 512 M
0 63 V
0 3984 R
0 -63 V
stroke
4111 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 40)]
] -53.3 MCshow
1.000 UL
LTb
5188 512 M
0 63 V
0 3984 R
0 -63 V
stroke
5188 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 45)]
] -53.3 MCshow
1.000 UL
LTb
6265 512 M
0 63 V
0 3984 R
0 -63 V
stroke
6265 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 50)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
880 4559 N
880 512 L
6031 0 V
0 4047 V
-6031 0 V
Z stroke
LCb setrgbcolor
128 2535 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 160.0 0.0 true true 0 (Duty cycle\(%\))]
] -53.3 MCshow
grestore
LTb
LCb setrgbcolor
3895 112 M
[ [(Helvetica) 160.0 0.0 true true 0 (Time \(m\))]
] -53.3 MCshow
LTb
3895 4799 M
[ [(Helvetica) 160.0 0.0 true true 0 (Duty cycle)]
] -53.3 MCshow
2.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
LCb setrgbcolor
6113 4416 M
[ [(Helvetica) 160.0 0.0 true true 0 (TX)]
] -53.3 MRshow
LT0
6209 4416 M
510 0 V
916 512 M
0 848 V
36 241 V
952 512 L
72 0 R
0 848 V
35 39 V
36 496 V
36 -271 V
0 -1112 V
72 0 R
0 1110 V
36 -9 V
36 -445 V
36 184 V
36 388 V
0 -1228 V
71 0 R
0 814 V
36 74 V
0 -888 V
72 0 R
0 1464 V
36 -546 V
0 -918 V
72 0 R
0 770 V
0 -770 V
72 0 R
0 879 V
36 -34 V
0 -845 V
71 0 R
0 1230 V
36 -177 V
0 -1053 V
72 0 R
0 880 V
36 608 V
0 -1488 V
72 0 R
0 850 V
36 34 V
0 -884 V
71 0 R
0 810 V
0 -810 V
72 0 R
0 1737 V
36 -87 V
36 50 V
36 -68 V
36 128 V
36 107 V
36 -227 V
36 90 V
35 -281 V
36 246 V
36 -58 V
36 115 V
36 -48 V
36 34 V
36 15 V
36 -95 V
36 -235 V
36 433 V
35 -258 V
36 7 V
36 169 V
36 -105 V
36 1 V
36 77 V
36 5 V
36 0 V
36 62 V
36 -20 V
35 -363 V
36 118 V
0 -1549 V
72 0 R
0 850 V
36 70 V
0 -920 V
72 0 R
0 947 V
36 -99 V
0 -848 V
72 0 R
0 1077 V
0 -1077 V
71 0 R
0 890 V
36 205 V
36 292 V
36 -413 V
36 -164 V
0 -810 V
72 0 R
0 919 V
36 -115 V
0 -804 V
71 0 R
0 848 V
36 -174 V
36 -172 V
36 390 V
0 -892 V
72 0 R
0 1481 V
stroke 4111 1993 M
36 -37 V
36 186 V
36 78 V
35 -792 V
0 -916 V
72 0 R
0 817 V
36 73 V
0 -890 V
72 0 R
0 851 V
0 -851 V
72 0 R
0 859 V
36 733 V
0 -1592 V
71 0 R
0 1051 V
36 -167 V
0 -884 V
72 0 R
0 884 V
36 34 V
0 -918 V
72 0 R
0 770 V
36 177 V
0 -947 V
72 0 R
0 1072 V
35 363 V
36 -408 V
36 -268 V
0 -759 V
72 0 R
0 882 V
36 -3 V
0 -879 V
72 0 R
0 811 V
36 103 V
0 -914 V
71 0 R
0 808 V
36 73 V
36 506 V
36 -274 V
0 -1113 V
72 0 R
0 851 V
36 261 V
0 -1112 V
72 0 R
0 1067 V
36 -18 V
0 -1049 V
71 0 R
0 882 V
36 -3 V
0 -879 V
72 0 R
0 1547 V
36 -941 V
36 -13 V
36 381 V
0 -974 V
72 0 R
0 949 V
35 160 V
0 -1109 V
72 0 R
0 1095 V
36 -247 V
0 -848 V
72 0 R
0 887 V
36 650 V
0 -1537 V
% End plot #1
% Begin plot #2
stroke
LT1
LCb setrgbcolor
6113 4256 M
[ [(Helvetica) 160.0 0.0 true true 0 (RX)]
] -53.3 MRshow
LT1
6209 4256 M
510 0 V
880 3379 M
36 5 V
36 22 V
36 -27 V
36 6 V
35 3 V
36 -12 V
36 45 V
36 -43 V
36 33 V
36 -8 V
36 -18 V
36 -2 V
36 44 V
36 -49 V
35 0 V
36 7 V
36 -7 V
36 5 V
36 10 V
36 -15 V
36 -2 V
36 2 V
36 12 V
36 -7 V
35 -4 V
36 48 V
36 -27 V
36 -21 V
36 9 V
36 -4 V
36 -6 V
36 9 V
36 3 V
36 -12 V
35 7 V
36 -7 V
36 94 V
36 -1 V
36 -1 V
36 -4 V
36 4 V
36 -6 V
36 -15 V
36 34 V
35 -50 V
36 60 V
36 -27 V
36 20 V
36 -11 V
36 -2 V
36 3 V
36 -33 V
36 -11 V
36 55 V
35 -32 V
36 8 V
36 17 V
36 -16 V
36 -5 V
36 26 V
36 2 V
36 -1 V
36 40 V
36 -30 V
35 -68 V
36 -17 V
36 -33 V
36 10 V
36 6 V
36 -14 V
36 12 V
36 -10 V
36 -4 V
36 25 V
35 -25 V
36 6 V
36 23 V
36 -44 V
36 35 V
36 -11 V
36 -9 V
36 9 V
36 -2 V
35 -6 V
36 8 V
36 0 V
36 -4 V
36 4 V
36 -9 V
36 -1 V
36 77 V
36 15 V
36 -7 V
35 -69 V
36 -14 V
36 0 V
36 7 V
36 -7 V
36 3 V
36 -4 V
36 3 V
36 43 V
stroke 4542 3424 M
36 -47 V
35 22 V
36 -10 V
36 -8 V
36 8 V
36 2 V
36 -13 V
36 -3 V
36 21 V
36 -17 V
36 22 V
35 -24 V
36 5 V
36 -3 V
36 -2 V
36 11 V
36 2 V
36 -12 V
36 1 V
36 12 V
36 -13 V
35 2 V
36 9 V
36 -15 V
36 40 V
36 -36 V
36 5 V
36 27 V
36 -31 V
36 24 V
36 -3 V
35 -21 V
36 9 V
36 0 V
36 -10 V
36 39 V
36 -33 V
36 3 V
36 12 V
36 -21 V
36 20 V
35 12 V
36 -32 V
36 29 V
36 -22 V
36 -6 V
36 9 V
36 16 V
36 -25 V
% End plot #2
% Begin plot #3
stroke
LT2
LCb setrgbcolor
6113 4096 M
[ [(Helvetica) 160.0 0.0 true true 0 (CPU)]
] -53.3 MRshow
LT2
6209 4096 M
510 0 V
880 2693 M
36 320 V
36 -12 V
36 -308 V
36 307 V
35 9 V
36 -90 V
36 78 V
36 -304 V
36 306 V
36 85 V
36 -202 V
36 119 V
36 -3 V
36 -306 V
35 317 V
36 -1 V
36 -315 V
36 288 V
36 26 V
36 -320 V
36 302 V
36 -297 V
36 315 V
36 -10 V
35 -306 V
36 306 V
36 -3 V
36 -303 V
36 307 V
36 129 V
36 -434 V
36 298 V
36 17 V
36 -322 V
35 301 V
36 -296 V
36 884 V
36 -235 V
36 204 V
36 -124 V
36 138 V
36 -68 V
36 -18 V
36 24 V
35 -273 V
36 254 V
36 -146 V
36 93 V
36 110 V
36 -19 V
36 103 V
36 -238 V
36 -249 V
36 409 V
35 -179 V
36 -52 V
36 224 V
36 -37 V
36 16 V
36 -122 V
36 104 V
36 68 V
36 -47 V
36 8 V
35 -200 V
36 -200 V
36 -431 V
36 322 V
36 -25 V
36 -302 V
36 325 V
36 -5 V
36 -317 V
36 312 V
35 -312 V
36 315 V
36 4 V
36 -90 V
36 78 V
36 1 V
36 -304 V
36 311 V
36 -5 V
35 -306 V
36 295 V
36 -110 V
36 -15 V
36 125 V
36 -301 V
36 435 V
36 103 V
36 170 V
36 33 V
35 -436 V
36 -300 V
36 307 V
36 8 V
36 -315 V
36 318 V
36 -316 V
36 307 V
36 116 V
stroke 4542 3118 M
36 -425 V
35 302 V
36 7 V
36 -308 V
36 314 V
36 1 V
36 -314 V
36 296 V
36 24 V
36 -320 V
36 374 V
35 -38 V
36 67 V
36 -112 V
36 -293 V
36 299 V
36 12 V
36 -308 V
36 296 V
36 18 V
36 -314 V
35 306 V
36 -3 V
36 -79 V
36 84 V
36 -308 V
36 313 V
36 1 V
36 -314 V
36 307 V
36 -9 V
35 -301 V
36 307 V
36 9 V
36 -313 V
36 422 V
36 -247 V
36 12 V
36 121 V
36 -311 V
36 320 V
35 -12 V
36 -306 V
36 305 V
36 1 V
36 -309 V
36 317 V
36 109 V
36 -425 V
% End plot #3
% Begin plot #4
stroke
LT3
LCb setrgbcolor
6113 3936 M
[ [(Helvetica) 160.0 0.0 true true 0 (LPM)]
] -53.3 MRshow
LT3
6209 3936 M
510 0 V
% End plot #4
stroke
LTb
880 4559 N
880 512 L
6031 0 V
0 4047 V
-6031 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
